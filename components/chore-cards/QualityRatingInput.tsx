import React, { useState } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, TextInput, Alert } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { QualityRating } from '../../types';\n\ninterface Props {\n  onSubmit: (qualityRating: QualityRating, satisfactionRating: number, comments?: string, photos?: string[]) => void;\n  onPreferenceUpdate: (rating: number, notes?: string) => void;\n  choreTitle: string;\n}\n\nconst QualityRatingInput: React.FC<Props> = ({\n  onSubmit,\n  onPreferenceUpdate,\n  choreTitle\n}) => {\n  const [qualityRating, setQualityRating] = useState<QualityRating | null>(null);\n  const [satisfactionRating, setSatisfactionRating] = useState<number>(3);\n  const [comments, setComments] = useState('');\n  const [showComments, setShowComments] = useState(false);\n\n  const qualityOptions = [\n    {\n      value: 'incomplete' as QualityRating,\n      title: 'Incomplete',\n      description: 'Task not finished or needs major work',\n      icon: 'close-circle',\n      color: '#ef4444',\n      points: '0%'\n    },\n    {\n      value: 'partial' as QualityRating,\n      title: 'Partial',\n      description: 'Some work done but more needed',\n      icon: 'remove-circle',\n      color: '#f59e0b',\n      points: '50%'\n    },\n    {\n      value: 'complete' as QualityRating,\n      title: 'Complete',\n      description: 'Task finished to standard',\n      icon: 'checkmark-circle',\n      color: '#10b981',\n      points: '100%'\n    },\n    {\n      value: 'excellent' as QualityRating,\n      title: 'Excellent',\n      description: 'Above and beyond expectations',\n      icon: 'star',\n      color: '#be185d',\n      points: '110%'\n    }\n  ];\n\n  const satisfactionEmojis = [\n    { value: 1, emoji: '😤', label: 'Hate it' },\n    { value: 2, emoji: '😕', label: 'Dislike' },\n    { value: 3, emoji: '😐', label: 'Neutral' },\n    { value: 4, emoji: '🙂', label: 'Like it' },\n    { value: 5, emoji: '😊', label: 'Love it' }\n  ];\n\n  const handleSubmit = () => {\n    if (!qualityRating) {\n      Alert.alert('Quality Rating Required', 'Please select how well you completed this task.');\n      return;\n    }\n\n    // Update preference\n    onPreferenceUpdate(satisfactionRating, comments || undefined);\n    \n    // Submit completion\n    onSubmit(qualityRating, satisfactionRating, comments || undefined);\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>How did you do?</Text>\n      <Text style={styles.subtitle}>Rate your completion of \"{choreTitle}\"</Text>\n\n      {/* Quality Rating */}\n      <View style={styles.section}>\n        <Text style={styles.sectionTitle}>Quality Assessment</Text>\n        <View style={styles.qualityOptions}>\n          {qualityOptions.map((option) => (\n            <TouchableOpacity\n              key={option.value}\n              style={[\n                styles.qualityOption,\n                qualityRating === option.value && styles.qualityOptionSelected,\n                { borderColor: option.color }\n              ]}\n              onPress={() => setQualityRating(option.value)}\n            >\n              <View style={styles.qualityHeader}>\n                <Ionicons \n                  name={option.icon as any} \n                  size={24} \n                  color={qualityRating === option.value ? option.color : '#d1d5db'} \n                />\n                <View style={styles.qualityInfo}>\n                  <Text style={[\n                    styles.qualityTitle,\n                    qualityRating === option.value && { color: option.color }\n                  ]}>\n                    {option.title}\n                  </Text>\n                  <Text style={styles.qualityPoints}>{option.points} points</Text>\n                </View>\n              </View>\n              <Text style={styles.qualityDescription}>{option.description}</Text>\n            </TouchableOpacity>\n          ))}\n        </View>\n      </View>\n\n      {/* Satisfaction Rating */}\n      <View style={styles.section}>\n        <Text style={styles.sectionTitle}>How did you feel about this task?</Text>\n        <View style={styles.satisfactionOptions}>\n          {satisfactionEmojis.map((option) => (\n            <TouchableOpacity\n              key={option.value}\n              style={[\n                styles.satisfactionOption,\n                satisfactionRating === option.value && styles.satisfactionOptionSelected\n              ]}\n              onPress={() => setSatisfactionRating(option.value)}\n            >\n              <Text style={styles.satisfactionEmoji}>{option.emoji}</Text>\n              <Text style={[\n                styles.satisfactionLabel,\n                satisfactionRating === option.value && styles.satisfactionLabelSelected\n              ]}>\n                {option.label}\n              </Text>\n            </TouchableOpacity>\n          ))}\n        </View>\n      </View>\n\n      {/* Comments */}\n      <View style={styles.section}>\n        <TouchableOpacity \n          style={styles.commentsToggle}\n          onPress={() => setShowComments(!showComments)}\n        >\n          <Text style={styles.commentsToggleText}>Add Comments (Optional)</Text>\n          <Ionicons \n            name={showComments ? \"chevron-up\" : \"chevron-down\"} \n            size={20} \n            color=\"#be185d\" \n          />\n        </TouchableOpacity>\n        \n        {showComments && (\n          <TextInput\n            style={styles.commentsInput}\n            placeholder=\"Share your thoughts about completing this task...\"\n            value={comments}\n            onChangeText={setComments}\n            multiline\n            numberOfLines={3}\n            maxLength={500}\n          />\n        )}\n      </View>\n\n      {/* Submit Button */}\n      <TouchableOpacity \n        style={[\n          styles.submitButton,\n          !qualityRating && styles.submitButtonDisabled\n        ]}\n        onPress={handleSubmit}\n        disabled={!qualityRating}\n      >\n        <Ionicons name=\"checkmark-circle\" size={20} color=\"#ffffff\" />\n        <Text style={styles.submitText}>Complete Task</Text>\n      </TouchableOpacity>\n\n      {/* Help Text */}\n      <Text style={styles.helpText}>\n        💡 Your feedback helps us assign tasks that match your preferences!\n      </Text>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#f8fafc',\n    borderRadius: 20,\n    padding: 20,\n    marginTop: 16,\n    borderWidth: 1,\n    borderColor: '#e2e8f0',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: '700',\n    color: '#831843',\n    textAlign: 'center',\n    marginBottom: 4,\n  },\n  subtitle: {\n    fontSize: 14,\n    color: '#6b7280',\n    textAlign: 'center',\n    marginBottom: 24,\n  },\n  section: {\n    marginBottom: 24,\n  },\n  sectionTitle: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#374151',\n    marginBottom: 12,\n  },\n  qualityOptions: {\n    gap: 12,\n  },\n  qualityOption: {\n    backgroundColor: '#ffffff',\n    borderRadius: 16,\n    padding: 16,\n    borderWidth: 2,\n    borderColor: '#e5e7eb',\n  },\n  qualityOptionSelected: {\n    backgroundColor: '#fef7ff',\n  },\n  qualityHeader: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  qualityInfo: {\n    marginLeft: 12,\n    flex: 1,\n  },\n  qualityTitle: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#374151',\n  },\n  qualityPoints: {\n    fontSize: 12,\n    fontWeight: '500',\n    color: '#9f1239',\n  },\n  qualityDescription: {\n    fontSize: 13,\n    color: '#6b7280',\n    lineHeight: 18,\n  },\n  satisfactionOptions: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    gap: 8,\n  },\n  satisfactionOption: {\n    flex: 1,\n    alignItems: 'center',\n    padding: 12,\n    backgroundColor: '#ffffff',\n    borderRadius: 16,\n    borderWidth: 2,\n    borderColor: '#e5e7eb',\n  },\n  satisfactionOptionSelected: {\n    backgroundColor: '#fef7ff',\n    borderColor: '#be185d',\n  },\n  satisfactionEmoji: {\n    fontSize: 24,\n    marginBottom: 6,\n  },\n  satisfactionLabel: {\n    fontSize: 11,\n    fontWeight: '500',\n    color: '#6b7280',\n    textAlign: 'center',\n  },\n  satisfactionLabelSelected: {\n    color: '#be185d',\n    fontWeight: '600',\n  },\n  commentsToggle: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingVertical: 8,\n  },\n  commentsToggleText: {\n    fontSize: 14,\n    fontWeight: '600',\n    color: '#be185d',\n  },\n  commentsInput: {\n    backgroundColor: '#ffffff',\n    borderRadius: 12,\n    padding: 16,\n    fontSize: 14,\n    color: '#374151',\n    borderWidth: 1,\n    borderColor: '#d1d5db',\n    marginTop: 12,\n    minHeight: 80,\n    textAlignVertical: 'top',\n  },\n  submitButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#be185d',\n    paddingVertical: 16,\n    borderRadius: 20,\n    marginBottom: 12,\n  },\n  submitButtonDisabled: {\n    backgroundColor: '#d1d5db',\n  },\n  submitText: {\n    fontSize: 16,\n    fontWeight: '700',\n    color: '#ffffff',\n    marginLeft: 8,\n  },\n  helpText: {\n    fontSize: 12,\n    color: '#6b7280',\n    textAlign: 'center',\n    lineHeight: 16,\n  },\n});\n\nexport default QualityRatingInput;"